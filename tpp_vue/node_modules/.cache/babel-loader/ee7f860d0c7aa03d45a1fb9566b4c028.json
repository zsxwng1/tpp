{"remainingRequest":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\src\\views\\login\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\src\\views\\login\\Login.vue","mtime":1567040363915},{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      imgurl: \"http://127.0.0.1:5050/01.png\",\n      unameholder: \"请输入您的手机号\",\n      upwdholder: \"请输入您的密码\",\n      uphone: \"\",\n      upwd: \"\"\n    };\n  },\n  // 使用路由钩子在页面里获取跳转过来的路径\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      console.log(\"打印出从哪个页面跳转过来\", from.fullPath); //判断，是否为 /reguser false，将其保存\n\n      if (from.path != \"/reguser\") {\n        vm.$store.commit(\"changeToLoginPath\", from.fullPath);\n      }\n\n      next(); //允许跳转      \n    });\n  },\n  computed: {\n    toLoginPath: function toLoginPath() {\n      return this.$store.state.toLoginPath;\n    },\n    //获取从哪个页面跳转到登录页面\n    cid: function cid() {\n      return this.$store.state.cid;\n    },\n    mid: function mid() {\n      return this.$store.state.mid;\n    }\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      //完成用户登录操作\n      //1：获取用户输入号码\n      var u = this.uphone; //2：获取用户输入密码\n\n      var p = this.upwd; // console.log(u+\":\"+p)测试\n      //3:创建正则表达式验证用户名和密码\n\n      var ureg = /^1[3-9][0-9]{9}$/;\n      var preg = /^\\w{6}$/; // 4：用户名验证失败，提示短消息\n\n      if (!ureg.test(u)) {\n        this.$toast(\"用户名格式不正确\");\n        return;\n      } // 5：密码验证失败，提示短消息\n\n\n      if (!preg.test(p)) {\n        this.$toast(\"密码格式不正确\");\n        return;\n      } // 6：发送ajax请求 axios\n\n\n      var url = \"user/v1/login\";\n      var obj = {\n        uphone: u,\n        upwd: p\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        // 7：获取服务器返回结果\n        // console.log(res);\n        // 7.1登录失败  提示  17816899467\n        if (res.data.code == -1) {\n          console.log(1);\n\n          _this.$toast(\"用户名或密码错误\");\n        } else {\n          //登录成功，先保存一下uid;\n          _this.$store.commit(\"changeUid\", res.data.data); //登录时，在这里进行判断  /  /findCinema  /cinema 一共三种情况\n\n\n          var path = _this.$store.getters.getToLoginPath; //1 /\n\n          if (path == \"/\") {\n            //  先设置主页面的active=movie  跳转到首页组件\n            // window.history.go(0); 该方法不可用，\n            //刷新页面，会清除掉前面改变过得vuex \n            _this.$store.commit(\"changeActive\", 'movie'); // this.$router.push(\"/\")     \n\n\n            _this.$router.go(-1);\n          } else {\n            // this.$router.push(path);\n            // this.$router.go(-1);         //不会刷新页面，返回history上一页\n            location.replace(path); //跳转时，会刷新页面，导致vuex数据丢失\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,cAAA,8BADA;AAEA,mBAAA,UAFA;AAGA,kBAAA,SAHA;AAIA,cAAA,EAJA;AAKA,YAAA;AALA,KAAA;AAOA,GATA;AAUA;AACA,kBAXA,4BAWA,EAXA,EAWA,IAXA,EAWA,IAXA,EAWA;AACA,SAAA,cAAA;AACA,cAAA,GAAA,CAAA,cAAA,EAAA,KAAA,QAAA,EADA,CAEA;;AACA,UAAA,KAAA,IAAA,IAAA,UAAA,EAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,KAAA,QAAA;AACA;;AACA,aANA,CAMA;AACA,KAPA;AAQA,GApBA;AAqBA,YAAA;AACA,eADA,yBACA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA;AAAA,KADA;AACA;AACA,OAFA,iBAEA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA;AAAA,KAFA;AAGA,OAHA,iBAGA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA;AAAA;AAHA,GArBA;AA0BA,WAAA;AACA,SADA,mBACA;AAAA;;AACA;AACA;AACA,UAAA,IAAA,KAAA,MAAA,CAHA,CAIA;;AACA,UAAA,IAAA,KAAA,IAAA,CALA,CAMA;AACA;;AACA,UAAA,OAAA,kBAAA;AACA,UAAA,OAAA,SAAA,CATA,CAUA;;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,UAAA;AACA;AACA,OAdA,CAeA;;;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,SAAA;AACA;AACA,OAnBA,CAoBA;;;AACA,UAAA,MAAA,eAAA;AACA,UAAA,MAAA;AAAA,gBAAA,CAAA;AAAA,cAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA;AACA,YAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,kBAAA,GAAA,CAAA,CAAA;;AACA,gBAAA,MAAA,CAAA,UAAA;AACA,SAHA,MAGA;AACA;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA,IAAA,IAAA,CAAA,IAAA,EAFA,CAGA;;;AACA,cAAA,OAAA,MAAA,MAAA,CAAA,OAAA,CAAA,cAAA,CAJA,CAKA;;AACA,cAAA,QAAA,GAAA,EAAA;AACA;AACA;AACA;AACA,kBAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA,OAAA,EAJA,CAKA;;;AACA,kBAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,WAPA,MAOA;AACA;AACA;AACA,qBAAA,OAAA,CAAA,IAAA,EAHA,CAGA;AAEA;AACA;AACA,OA3BA;AA6BA;AArDA;AA1BA,CAAA","sourcesContent":["<template>\r\n    <div class=\"app-login\">\r\n        <!-- 1：头像 -->\r\n        <div class=\"imgstyle\">\r\n            <img :src=\"imgurl\" >\r\n        </div>\r\n        <div class=\"am-list\">\r\n            <!-- 2：用户名输入框（手机号）  -->\r\n            <mt-field :placeholder=\"unameholder\" v-model=\"uphone\" class=\"am-list-item\"></mt-field>\r\n            <!-- 3：密码输入框 -->\r\n            <mt-field :placeholder=\"upwdholder\" v-model=\"upwd\" class=\"am-list-item\"></mt-field>\r\n            <!-- 4：登录按钮 -->\r\n            <div class=\"btnstyle\">\r\n                <mt-button @click=\"login\">登 录</mt-button>\r\n            </div>\r\n            <!-- 5:免费注册 -->\r\n            <router-link to=\"/reguser\" class=\"fontstyle\">没有账号?免费注册</router-link>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            imgurl:\"http://127.0.0.1:5050/01.png\",\r\n            unameholder:\"请输入您的手机号\",\r\n            upwdholder:\"请输入您的密码\",\r\n            uphone:\"\",\r\n            upwd:\"\"\r\n        }\r\n    },\r\n    // 使用路由钩子在页面里获取跳转过来的路径\r\n    beforeRouteEnter (to, from, next) {\r\n        next(vm=>{\r\n            console.log(\"打印出从哪个页面跳转过来\",from.fullPath);\r\n            //判断，是否为 /reguser false，将其保存\r\n            if(from.path!=\"/reguser\"){\r\n                vm.$store.commit(\"changeToLoginPath\",from.fullPath)\r\n            }\r\n            next();  //允许跳转      \r\n        })\r\n    },\r\n    computed:{\r\n        toLoginPath(){ return this.$store.state.toLoginPath;},  //获取从哪个页面跳转到登录页面\r\n        cid(){return this.$store.state.cid; },\r\n        mid(){return this.$store.state.mid; },\r\n    },\r\n    methods:{\r\n        login(){\r\n            //完成用户登录操作\r\n            //1：获取用户输入号码\r\n            var u=this.uphone;\r\n            //2：获取用户输入密码\r\n            var p=this.upwd;\r\n            // console.log(u+\":\"+p)测试\r\n            //3:创建正则表达式验证用户名和密码\r\n            var ureg=/^1[3-9][0-9]{9}$/;\r\n            var preg=/^\\w{6}$/;\r\n            // 4：用户名验证失败，提示短消息\r\n            if(!ureg.test(u)){\r\n                this.$toast(\"用户名格式不正确\");\r\n                return;\r\n            }\r\n            // 5：密码验证失败，提示短消息\r\n            if(!preg.test(p)){\r\n                this.$toast(\"密码格式不正确\");\r\n                return;\r\n            }\r\n            // 6：发送ajax请求 axios\r\n            var url=\"user/v1/login\";\r\n            var obj={uphone:u,upwd:p}\r\n            this.axios.get(url,{params:obj}).then(res=>{\r\n                // 7：获取服务器返回结果\r\n                // console.log(res);\r\n                // 7.1登录失败  提示  17816899467\r\n                if(res.data.code==-1){\r\n                    console.log(1);\r\n                    this.$toast(\"用户名或密码错误\")\r\n                }else{\r\n                    //登录成功，先保存一下uid;\r\n                    this.$store.commit(\"changeUid\",res.data.data);\r\n                    //登录时，在这里进行判断  /  /findCinema  /cinema 一共三种情况\r\n                        var path=this.$store.getters.getToLoginPath;\r\n                        //1 /\r\n                        if(path==\"/\"){\r\n                            //  先设置主页面的active=movie  跳转到首页组件\r\n                            // window.history.go(0); 该方法不可用，\r\n                            //刷新页面，会清除掉前面改变过得vuex \r\n                            this.$store.commit(\"changeActive\",'movie');  \r\n                            // this.$router.push(\"/\")     \r\n                            this.$router.go(-1);\r\n                        }else{\r\n                            // this.$router.push(path);\r\n                            // this.$router.go(-1);         //不会刷新页面，返回history上一页\r\n                            location.replace(path);   //跳转时，会刷新页面，导致vuex数据丢失\r\n\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    /* 图片样式 */\r\n    .imgstyle{\r\n        width:5rem;height: 5rem;\r\n        margin: 3rem auto;\r\n    }\r\n    .imgstyle>img{border-radius: 5rem}\r\n    /* 输入框样式 */\r\n    .am-list-item{\r\n        width:20rem;\r\n        border: 0;\r\n        border-bottom: 1px solid #ff2e62;\r\n        margin: 1.8rem auto;\r\n        font-size: .1rem;\r\n    }\r\n    /* 按钮样式 */\r\n    .btnstyle{\r\n        width:20rem; height: 2.8rem;\r\n        margin: 2rem auto;\r\n        margin-bottom: 1rem;\r\n    }\r\n    .btnstyle>button{\r\n        width: 100%;height: 100%;\r\n        background: linear-gradient(45deg,#ff47a8,#ff2e62);\r\n        border-radius: 2rem;\r\n        font-size: 1.1rem;\r\n        color: #ffffff;\r\n    }\r\n    /* 注册文字样式 */\r\n    .fontstyle{\r\n        display: inline-block;\r\n        width: 20rem;\r\n        font-size:.8rem;\r\n        text-align: center;\r\n        color: #333333;\r\n    }\r\n</style>"],"sourceRoot":"src\\views\\login"}]}
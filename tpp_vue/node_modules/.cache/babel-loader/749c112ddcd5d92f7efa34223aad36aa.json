{"remainingRequest":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\src\\App.vue?vue&type=script&lang=js","dependencies":[{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\src\\App.vue","mtime":1566991535423},{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'App',\n  created: function created() {\n    var _this = this;\n\n    //在页面加载时读取sessionStorage里的状态信息\n    if (sessionStorage.getItem(\"store\")) {\n      this.$store.replaceState(Object.assign({}, this.$store.state, JSON.parse(sessionStorage.getItem(\"store\"))));\n      sessionStorage.removeItem('store');\n    } //在页面刷新时将vuex里的信息保存到sessionStorage里\n\n\n    window.addEventListener(\"beforeunload\", function () {\n      sessionStorage.setItem(\"store\", JSON.stringify(_this.$store.state));\n    });\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA,eAAA;AACA,QAAA,KADA;AAEA,SAFA,qBAEA;AAAA;;AACA;AACA,QAAA,eAAA,OAAA,CAAA,OAAA,CAAA,EAAA;AACA,WAAA,MAAA,CAAA,YAAA,CAAA,OAAA,MAAA,CAAA,EAAA,EAAA,KAAA,MAAA,CAAA,KAAA,EAAA,KAAA,KAAA,CAAA,eAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,qBAAA,UAAA,CAAA,OAAA;AACA,KALA,CAMA;;;AACA,WAAA,gBAAA,CAAA,cAAA,EAAA,YAAA;AACA,qBAAA,OAAA,CAAA,OAAA,EAAA,KAAA,SAAA,CAAA,MAAA,MAAA,CAAA,KAAA,CAAA;AACA,KAFA;AAGA;AAZA,CAAA","sourcesContent":["<template>\n <div class=\"app-container\">\n    <!-- <router-view></router-view> -->\n    <!--  缓存保存：套一层keep-alive -->\n   <keep-alive>\n      <router-view v-if=\"$route.meta.keepAlive\"></router-view>\n   </keep-alive>\n   <router-view v-if=\"!$route.meta.keepAlive\"></router-view>\n </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  created () {\n    //在页面加载时读取sessionStorage里的状态信息\n    if (sessionStorage.getItem(\"store\") ) {\n      this.$store.replaceState(Object.assign({}, this.$store.state,JSON.parse(sessionStorage.getItem(\"store\"))));\n      sessionStorage.removeItem('store');\n    }\n    //在页面刷新时将vuex里的信息保存到sessionStorage里\n    window.addEventListener(\"beforeunload\",()=>{\n      sessionStorage.setItem(\"store\",JSON.stringify(this.$store.state))\n    })\n  }\n}\n</script>\n\n<style>\n   .app-container{\n      /* app.vue 自定义的属性 */\n     /* padding-top:40px; */\n     /* padding-bottom:50px; */\n     padding:0;\n     overflow-x:hidden;\n   }\n\n .mui-bar-tab .mui-tab-item-tao.mui-active {\n    color: #007aff;\n }\n.mui-bar-tab .mui-tab-item-tao {\n    display: table-cell;\n    overflow: hidden;\n    width: 1%;\n    height: 50px;\n    text-align: center;\n    vertical-align: middle;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    color: #929292;\n}\n.mui-bar-tab .mui-tab-item-tao .mui-icon {\n    top: 3px;\n    width: 24px;\n    height: 24px;\n    padding-top: 0;\n    padding-bottom: 0;\n}\n\n.mui-bar-tab .mui-tab-item-tao .mui-icon~.mui-tab-label {\n   font-size:11px;\n   display:block;\n   overflow:hidden;\n   text-overflow:ellipsis;\n\n}\n</style>\n"],"sourceRoot":"src"}]}
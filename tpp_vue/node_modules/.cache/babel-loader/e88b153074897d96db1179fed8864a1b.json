{"remainingRequest":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\src\\router.js","dependencies":[{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\src\\router.js","mtime":1566994909572},{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport HelloContainer from \"./components/HelloWorld.vue\"; //对下面这些自己创建的组件进行路径的配置\n// 每新建一个组件，就在这里导入，并为其创建一个接口\n// import Index from './views/Index'\n// import Lady from './views/Lady'\n// import ShoppingCar from './views/ShoppingCar'\n// import NotFound from './views/NotFound'\n// import select from './views/select'\n\nimport Home from './views/Home';\nimport SelectCity from './views/city/SelectCity';\nimport MovieDetail from './views/movie/MovieDetail';\nimport FindCinema from './views/cinema/FindCinema';\nimport Cinema from './views/cinema/Cinema';\nimport Login from \"./views/login/Login.vue\";\nimport Reguser from \"./views/reguser/Reguser.vue\";\nimport Seat from \"./views/seat/Seat.vue\";\nimport Payment from \"./views/pay/Payment.vue\";\nVue.use(Router);\nvar router = new Router({\n  //1 使用ES6的规范，到出一个对象\n  routes: [// {path:'/hello',component:HelloContainer},         //false 时，页面跳转过去，不会刷新页面\n  {\n    path: '/',\n    component: Home,\n    meta: {\n      keepAlive: false\n    }\n  }, //false 不需要缓存页面 true需要缓存页面\n  {\n    path: '/selectCity',\n    component: SelectCity,\n    meta: {\n      keepAlive: false\n    }\n  }, {\n    path: '/movieDetail/:mid',\n    component: MovieDetail,\n    props: true,\n    meta: {\n      keepAlive: false\n    }\n  }, //只有电影详情页使用了路由传参，尽量不使用\n  {\n    path: '/findCinema',\n    component: FindCinema,\n    meta: {\n      keepAlive: false\n    }\n  }, //使用了路由，query传参\n  {\n    path: '/cinema',\n    component: Cinema,\n    meta: {\n      keepAlive: false\n    }\n  }, {\n    path: '/login',\n    component: Login,\n    meta: {\n      keepAlive: false\n    }\n  }, {\n    path: '/reguser',\n    component: Reguser,\n    meta: {\n      keepAlive: false\n    }\n  }, {\n    path: '/seat',\n    component: Seat,\n    meta: {\n      keepAlive: false\n    }\n  }, {\n    path: '/payment',\n    component: Payment,\n    meta: {\n      keepAlive: false\n    }\n  }],\n  // 缓存保存\n  mode: 'history',\n  //history // hash\n  scrollBehavior: function scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    } else {\n      if (from.meta.keepAlive) {\n        from.meta.savedPosition = document.body.scrollTop;\n      }\n\n      return {\n        x: 0,\n        y: to.meta.savedPosition || 0\n      };\n    }\n  } //注释：位置确实记录上了(加缓存，返回不刷新页面)，也就是说，返回不触发created，所以有些页面需要返回触发的东西都写在activated里面\n  //activated() 在进入页面时触发函数，在缓存下也触发\n  //1 获取路由地址\n  // console.log(this.$route.path)\n  // console.log(window.location.href)\n  //2 返回前一个页面 \n  // history.back();回到上一页\n\n});\nrouter.beforeEach(function (to, from, next) {\n  //路由守卫，在页面跳转时打印路由的from和to\n  // console.log(from)\n  // console.log(to) \n  next();\n});\nexport default router;",{"version":3,"sources":["src\\router.js"],"names":["Vue","Router","HelloContainer","Home","SelectCity","MovieDetail","FindCinema","Cinema","Login","Reguser","Seat","Payment","use","router","routes","path","component","meta","keepAlive","props","mode","scrollBehavior","to","from","savedPosition","document","body","scrollTop","x","y","beforeEach","next"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,cAAP,MAA2B,6BAA3B,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEAX,IAAIY,GAAJ,CAAQX,MAAR;AAEA,IAAMY,SAAS,IAAIZ,MAAJ,CAAW;AAAK;AAC7Ba,UAAQ,CACN;AACA;AAACC,UAAK,GAAN;AAAUC,eAAUb,IAApB;AAAyBc,UAAK;AAACC,iBAAU;AAAX;AAA9B,GAFM,EAE+C;AACrD;AAACH,UAAK,aAAN;AAAoBC,eAAUZ,UAA9B;AAAyCa,UAAK;AAACC,iBAAU;AAAX;AAA9C,GAHM,EAIN;AAACH,UAAK,mBAAN;AAA0BC,eAAUX,WAApC;AAAgDc,WAAM,IAAtD;AAA2DF,UAAK;AAACC,iBAAU;AAAX;AAAhE,GAJM,EAI+E;AACrF;AAACH,UAAK,aAAN;AAAoBC,eAAUV,UAA9B;AAAyCW,UAAK;AAACC,iBAAU;AAAX;AAA9C,GALM,EAK2E;AACjF;AAACH,UAAK,SAAN;AAAgBC,eAAUT,MAA1B;AAAiCU,UAAK;AAACC,iBAAU;AAAX;AAAtC,GANM,EAON;AAACH,UAAK,QAAN;AAAeC,eAAUR,KAAzB;AAA+BS,UAAK;AAACC,iBAAU;AAAX;AAApC,GAPM,EAQN;AAACH,UAAK,UAAN;AAAiBC,eAAUP,OAA3B;AAAmCQ,UAAK;AAACC,iBAAU;AAAX;AAAxC,GARM,EASN;AAACH,UAAK,OAAN;AAAcC,eAAUN,IAAxB;AAA6BO,UAAK;AAACC,iBAAU;AAAX;AAAlC,GATM,EAUN;AAACH,UAAK,UAAN;AAAiBC,eAAUL,OAA3B;AAAmCM,UAAK;AAACC,iBAAU;AAAX;AAAxC,GAVM,CADgB;AAkBxB;AACAE,QAAM,SAnBkB;AAmBH;AACrBC,gBApBwB,0BAoBRC,EApBQ,EAoBJC,IApBI,EAoBEC,aApBF,EAoBiB;AACvC,QAAIA,aAAJ,EAAmB;AACjB,aAAOA,aAAP;AACD,KAFD,MAEO;AACL,UAAGD,KAAKN,IAAL,CAAUC,SAAb,EAAuB;AACrBK,aAAKN,IAAL,CAAUO,aAAV,GAAwBC,SAASC,IAAT,CAAcC,SAAtC;AACD;;AACD,aAAO;AAAEC,WAAG,CAAL;AAAQC,WAAGP,GAAGL,IAAH,CAAQO,aAAR,IAAyB;AAApC,OAAP;AACD;AACF,GA7BuB,CA8BxB;AACA;AAEA;AACA;AACA;AACA;AACA;;AArCwB,CAAX,CAAf;AAuCAX,OAAOiB,UAAP,CAAmB,UAACR,EAAD,EAAIC,IAAJ,EAASQ,IAAT,EAAgB;AAAG;AACpC;AACA;AACAA;AACD,CAJD;AAKA,eAAelB,MAAf","sourceRoot":"c:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue","sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport HelloContainer from \"./components/HelloWorld.vue\"\r\n\r\n\r\n\r\n//对下面这些自己创建的组件进行路径的配置\r\n// 每新建一个组件，就在这里导入，并为其创建一个接口\r\n// import Index from './views/Index'\r\n// import Lady from './views/Lady'\r\n// import ShoppingCar from './views/ShoppingCar'\r\n// import NotFound from './views/NotFound'\r\n// import select from './views/select'\r\nimport Home from './views/Home'\r\nimport SelectCity from './views/city/SelectCity'\r\nimport MovieDetail from './views/movie/MovieDetail'\r\nimport FindCinema from './views/cinema/FindCinema'\r\nimport Cinema from './views/cinema/Cinema'\r\nimport Login from \"./views/login/Login.vue\"\r\nimport Reguser from \"./views/reguser/Reguser.vue\"\r\nimport Seat from \"./views/seat/Seat.vue\"\r\nimport Payment from \"./views/pay/Payment.vue\"\r\n\r\nVue.use(Router)\r\n\r\nconst router = new Router({    //1 使用ES6的规范，到出一个对象\r\n  routes: [\r\n    // {path:'/hello',component:HelloContainer},         //false 时，页面跳转过去，不会刷新页面\r\n    {path:'/',component:Home,meta:{keepAlive:false}},    //false 不需要缓存页面 true需要缓存页面\r\n    {path:'/selectCity',component:SelectCity,meta:{keepAlive:false}},\r\n    {path:'/movieDetail/:mid',component:MovieDetail,props:true,meta:{keepAlive:false}},  //只有电影详情页使用了路由传参，尽量不使用\r\n    {path:'/findCinema',component:FindCinema,meta:{keepAlive:false}},                //使用了路由，query传参\r\n    {path:'/cinema',component:Cinema,meta:{keepAlive:false}},\r\n    {path:'/login',component:Login,meta:{keepAlive:false}},\r\n    {path:'/reguser',component:Reguser,meta:{keepAlive:false}},\r\n    {path:'/seat',component:Seat,meta:{keepAlive:false}},\r\n    {path:'/payment',component:Payment,meta:{keepAlive:false}},\r\n    // {path:'/',component:Index},\r\n    // {path:'/lady',component:Lady},\r\n    // {path:'/shoppingCar',component:ShoppingCar},\r\n    // {path:'/select',component:select},\r\n    // {path:'*',component:NotFound},\r\n  ],\r\n  // 缓存保存\r\n  mode: 'history',     //history // hash\r\n  scrollBehavior (to, from, savedPosition) {\r\n    if (savedPosition) {\r\n      return savedPosition\r\n    } else {\r\n      if(from.meta.keepAlive){\r\n        from.meta.savedPosition=document.body.scrollTop\r\n      }\r\n      return { x: 0, y: to.meta.savedPosition || 0} \r\n    }\r\n  }\r\n  //注释：位置确实记录上了(加缓存，返回不刷新页面)，也就是说，返回不触发created，所以有些页面需要返回触发的东西都写在activated里面\r\n  //activated() 在进入页面时触发函数，在缓存下也触发\r\n\r\n  //1 获取路由地址\r\n  // console.log(this.$route.path)\r\n  // console.log(window.location.href)\r\n  //2 返回前一个页面 \r\n  // history.back();回到上一页\r\n})\r\nrouter.beforeEach( (to,from,next)=>{  //路由守卫，在页面跳转时打印路由的from和to\r\n  // console.log(from)\r\n  // console.log(to) \r\n  next();\r\n})\r\nexport default router;\r\n"]}]}